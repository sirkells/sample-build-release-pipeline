name: Release-CD-pipeline
# Explicitly set none for repositry trigger
trigger:
- none

resources:
  pipelines:
  - pipeline: MyAppPipeline  # Name of the pipeline resource
    source: build-CI-pipeline # Name of the triggering pipeline
    trigger: 
      branches:
      - main
pool:
  vmImage: 'ubuntu-latest'

jobs:
- deployment: Deploy
  displayName: Deploy
  environment: DevDeploy
  pool: 
    vmImage: $(vmImageName)
  strategy:
    runOnce:
      deploy:
        steps:          
        - download: myappbuild
          artifact: drop  
        - task: ExtractFiles@1
          inputs:
            archiveFilePatterns: '$(PIPELINE.WORKSPACE)/MyAppPipeline/AppBuildArtifact/$(resources.pipeline.MyAppPipeline.runID).zip'
            destinationFolder: '$(agent.builddirectory)'
            cleanDestinationFolder: false
        - script: |  
            cat $(agent.builddirectory)/greatcode.txt
# variables:
#   vmImageName: 'ubuntu-latest'
#   ArtifactName: 'AppBuildArtifact'
#   ArtifactSourceFolder: $(ArtifactName)/$(ArtifactName)
#   BuildId: $(Build.BuildId)
#   PipelineName: 'MyAppPipeline'
#   Source: build-CI-pipeline

# stages:
# - stage: Dev_Deploy
#   # condition: startsWith(variables['resources.pipeline.CustomerApiBuild.sourcebranch'], 'refs/pull/') 
#   jobs:
#   - template: templates/deploymentJob.yml
#     parameters:
#         buildId: $(BuildId)
#         artifactName: $(ArtifactName)
#         pipelineName: $(PipelineName)
#         runID: resources.pipeline.$(PipelineName).runID
# - deployment: Deploy
#   displayName: Deploy
#   environment: DevDeploy
#   pool: 
#     vmImage: $(vmImageName)
#   strategy:
#     runOnce:
#       deploy:
#         steps:          
#         - download: myappbuild
#           artifact: drop  
#         - task: ExtractFiles@1
#           inputs:
#             archiveFilePatterns: '$(PIPELINE.WORKSPACE)/myappbuild/drop/$(resources.pipeline.myappbuild.runID).zip'
#             destinationFolder: '$(agent.builddirectory)'
#             cleanDestinationFolder: false
#         - script: |  
#             cat $(agent.builddirectory)/greatcode.txt